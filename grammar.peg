package main

import "os/exec"

type Prog Peg {
     Cmd *exec.Cmd
     In io.Writer
     Args []string
     MStat *MatchStatus
}

Main <- Block+ eof

Block <- Pattern nl (tab Command)* 

Command <- <(!nl .)*> nl  {
	logln("command:",text);
	if p.MStat.All {
		p.In.Write(append([]byte(text),'\n'))
	}
}

Pattern <- {p.MStat.Reset()} ( UndPat {p.MStat.All = true}
	   		       / PatternList 
			     ) {p.MStat.Process()}

UndPat <- "_" 
PatternList <- "[" sp* ( PatListItem )? sp "]"
PatListItem <- SubPattern {p.MStat.ActiveArg++}

SubPattern <- UndPat {p.MStat.MatchArg()}

eof <- !. {logln("end of file");p.In.Write([]byte{'\x03'})}

nl <- "\n"

sp <- " "

tab <- "\t"